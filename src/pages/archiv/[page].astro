---
export const prerender = true;

import Hero from "../../components/Hero.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import { formatPrice } from "../../utils/price-format";
import { getCollection, type CollectionEntry } from "astro:content";
import { generateSlug } from "../../content/config";
import { Image } from "astro:assets";
import hero from "../../../src/assets/archiv.jpg";
import Pagination from "../../components/Pagination.astro";

const { title="Archív", description="Prohlédněte si nástroje s novými spokojenými zákazníky." } = Astro.props;

// db pull
const productDatabase = await getCollection("archiv");

// Pagination start
// https://docs.astro.build/en/guides/routing/#pagination
const { page } = Astro.params;
const currentPage = parseInt(page);

// ID sort from highest to lowest 
const sortedProducts = productDatabase.sort((a, b) => b.data.id - a.data.id);

// Page max is set to 12
const productsPerPage = 12;
const totalProducts = sortedProducts.length;
const totalPages = Math.ceil(totalProducts / productsPerPage);

if (currentPage < 1 || currentPage > totalPages) {
  return Astro.redirect("/404");
}

// Getting current page
const startIndex = (currentPage - 1) * productsPerPage;
const endIndex = startIndex + productsPerPage;
const currentProducts = sortedProducts.slice(startIndex, endIndex);

export async function getStaticPaths() {
  const productDatabase = await getCollection("archiv");
  const totalPages = Math.ceil(productDatabase.length / 12);
  
  return Array.from({ length: totalPages }, (_, i) => ({
    params: { page: (i + 1).toString() },
  }));
}
// Pagination end
---

<MainLayout {title} {description}>
  <main class="main" role="main" aria-label={title}>
    <Hero
      heroTitle="ARCHÍV"
      backgroundImage={hero}>
    </Hero>

    <section class="section-archive" role="region" aria-label="Archív prodaných nástrojů">
      <div class="archive-container" aria-label="Katalog archivovaných produktů">
        <div class="sold-items" aria-label="Prodané produkty">
          <div class="archive-search" aria-label="Vyhledávání a řazení v archívu">
            <div class="archive-search-sort" aria-label="Vyhledávání">
              <input placeholder="Vyhledat v archívu..." id="vyhledat" class="__text-input search-field" type="search" name="vyhledat" aria-label="Vyhledávácí pole" />
            </div>
            <select class="__select sold-sort" aria-label="Seřazení produktů">
              <!-- 
              a1 = newest
              b2 = oldest
              -->
              <option
                label="Seřazení: nejnovější"
                value="a"
                selected>
              </option>
              <option
                label="Seřazení: nejstarší"
                value="b">
              </option>
            </select>
          </div>

          <!-- PRODUCT DISPLAY -->
          <div class="page-divider">
            {productDatabase.length > 0 ? (
              <div class="sold-product-cards">
                {currentProducts.map((product) => (
                  <a href={`/archiv/${generateSlug(product.data.model, product.data.id)}`} class="product-card" data-id={product.data.id}>
                    <figure class="product-body-mini" aria-label="Karta produktu s obrázkem, názvem a cenou">
                      <Image
                        src={product.data.coverImage.src}
                        alt={product.data.coverImage.alt || `Doprovázející obrázek produktu ${product.data.model}`}
                        class="__image product-image"
                        aria-label="Interaktivní karta produktu"
                        quality={100}
                        format="webp"
                        loading="lazy"
                      />
                      <figcaption class="product-description" aria-label="Popis produktu">
                        <span class="product-name" aria-label="Název produktu">
                          {product.data.model}
                        </span>
                        <span class="product-price" aria-label="Cena produktu">
                          {formatPrice(product.data.price)}
                        </span>
                      </figcaption>
                    </figure>
                  </a>
                ))}
              </div>
            ) : (
            <p>Žádné produkty nenalezeny...</p>
            )}

            <!-- PAGINATION -->
            <Pagination 
              currentPage={currentPage}
              totalPages={totalPages}
              baseUrl="/archiv/"
            />

          </div>
        </div>
      </div>
    </section>
  </main>
  <script src="../../scripts/product-filter.js"></script>
</MainLayout>